export interface SesionState {
    claims: Claims | any,
    loader: boolean,
    errores: number,
    sesion: boolean,
    listaUsuarios: User[],
    actualizarUsuarios: boolean
}

export const SessionInitialState: SesionState = {
    claims: {
        email: '',
        name: '',
        oficial: false,
        token: ''
    },
    errores: 0,
    loader: false,
    sesion: false,
    listaUsuarios: [],
    actualizarUsuarios: false
}

export interface SessionContextProps {
    sesion: boolean,
    loginError: number,
    localState: SesionState,
    InciarSesion: ({ email, password }: inicioSesion) => void,
    CerrarSesion: () => void,
    dispatch: any;
    windowSize: number,
    listaDeUsuarios: () => void,
    actualizar: boolean,
    listaActualizada: () => void
}


export interface Registro {
    nombre: string,
    email: string,
    password: string,
    oficial: boolean | string,
}

export interface inicioSesion {
    email: string,
    password: string
}

export interface UsuarioLogueado {
    isSignedIn: boolean,
    pending: boolean,
    user: Claims,
    token?: string
}


export interface listaExamenes {
    pending: boolean,
    examenes: []
}

// Generated by https://quicktype.io

export interface TokenID {
    token: string;
    claims: Claims;
}

export interface Claims {
    name: string;
    oficial: boolean;
    email: string;
    token?: string;
}

export interface Firebase {
    identities: Identities;
    sign_in_provider: string;
}

export interface Identities {
    email: string[];
}


export interface ErrorLoginTypes {
    code: string;
    message: string;
}


export interface Usuario {
    user: User;
    credential: null;
    additionalUserInfo: AdditionalUserInfo;
    operationType: string;
}

export interface AdditionalUserInfo {
    providerId: string;
    isNewUser: boolean;
}

export interface User {
    uid: string;
    displayName: string;
    photoURL: null;
    email: string;
    emailVerified: boolean;
    phoneNumber: null;
    isAnonymous: boolean;
    tenantId: null;
    providerData: ProviderDatum[];
    apiKey: string;
    appName: string;
    authDomain: string;
    stsTokenManager: StsTokenManager;
    redirectEventId: null;
    lastLoginAt: string;
    createdAt: string;
}


export interface ProviderDatum {
    uid: string;
    displayName: string;
    photoURL: null;
    email: string;
    phoneNumber: null;
    providerId: string;
}

export interface StsTokenManager {
    apiKey: string;
    refreshToken: string;
    accessToken: string;
    expirationTime: number;
}


// Generated by https://quicktype.io

export interface ListaUsuariosAPI {
    data: Data;
    status: number;
    statusText: string;
    config: Config;
    request: Request;
}

export interface Config {
    url: string;
    method: string;
    headers: ConfigHeaders;
    baseURL: string;
    transformRequest: null[];
    transformResponse: null[];
    timeout: number;
    xsrfCookieName: string;
    xsrfHeaderName: string;
    maxContentLength: number;
    maxBodyLength: number;
}

export interface ConfigHeaders {
    Accept: string;
    authorization: string;
}

export interface Data {
    users: UsuarioAPI[];
}

export interface UsuarioAPI {
    uid: string;
    email: string;
    emailVerified: boolean;
    displayName: string;
    disabled: boolean;
    metadata: Metadata;
    passwordHash: string;
    passwordSalt: string;
    tokensValidAfterTime: string;
    providerData: ProviderDatum[];
    customClaims?: CustomClaims;
}

export interface CustomClaims {
    oficial: boolean;
}

export interface Metadata {
    lastSignInTime: string;
    creationTime: string;
}


